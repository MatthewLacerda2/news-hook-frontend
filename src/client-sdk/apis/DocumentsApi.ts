/* tslint:disable */
/* eslint-disable */
/**
 * News Hook API
 * API for monitoring and alerting on news and content updates
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  UserDocumentCreateRequest,
  UserDocumentCreateResponse,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    UserDocumentCreateRequestFromJSON,
    UserDocumentCreateRequestToJSON,
    UserDocumentCreateResponseFromJSON,
    UserDocumentCreateResponseToJSON,
} from '../models/index';

export interface PostDocumentApiV1DocumentsPostRequest {
    xUserId: string;
    userDocumentCreateRequest: UserDocumentCreateRequest;
}

/**
 * 
 */
export class DocumentsApi extends runtime.BaseAPI {

    /**
     * Create a new document
     * Post Document
     */
    async postDocumentApiV1DocumentsPostRaw(requestParameters: PostDocumentApiV1DocumentsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserDocumentCreateResponse>> {
        if (requestParameters['xUserId'] == null) {
            throw new runtime.RequiredError(
                'xUserId',
                'Required parameter "xUserId" was null or undefined when calling postDocumentApiV1DocumentsPost().'
            );
        }

        if (requestParameters['userDocumentCreateRequest'] == null) {
            throw new runtime.RequiredError(
                'userDocumentCreateRequest',
                'Required parameter "userDocumentCreateRequest" was null or undefined when calling postDocumentApiV1DocumentsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters['xUserId'] != null) {
            headerParameters['X-User-Id'] = String(requestParameters['xUserId']);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-Key"] = await this.configuration.apiKey("X-API-Key"); // APIKeyHeader authentication
        }

        const response = await this.request({
            path: `/api/v1/documents/`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: UserDocumentCreateRequestToJSON(requestParameters['userDocumentCreateRequest']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserDocumentCreateResponseFromJSON(jsonValue));
    }

    /**
     * Create a new document
     * Post Document
     */
    async postDocumentApiV1DocumentsPost(requestParameters: PostDocumentApiV1DocumentsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserDocumentCreateResponse> {
        const response = await this.postDocumentApiV1DocumentsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
