/* tslint:disable */
/* eslint-disable */
/**
 * News Hook API
 * API for monitoring and alerting on news and content updates
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AlertEventListResponse,
  HTTPValidationError,
} from '../models/index';
import {
    AlertEventListResponseFromJSON,
    AlertEventListResponseToJSON,
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
} from '../models/index';

export interface ListEventsApiV1EventsGetRequest {
    offset?: number;
    limit?: number;
    triggeredBefore?: Date | null;
    triggeredAfter?: Date | null;
}

/**
 * 
 */
export class EventsApi extends runtime.BaseAPI {

    /**
     * List all events for the authenticated user with filtering and pagination
     * List Events
     */
    async listEventsApiV1EventsGetRaw(requestParameters: ListEventsApiV1EventsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AlertEventListResponse>> {
        const queryParameters: any = {};

        if (requestParameters['offset'] != null) {
            queryParameters['offset'] = requestParameters['offset'];
        }

        if (requestParameters['limit'] != null) {
            queryParameters['limit'] = requestParameters['limit'];
        }

        if (requestParameters['triggeredBefore'] != null) {
            queryParameters['triggered_before'] = (requestParameters['triggeredBefore'] as any).toISOString();
        }

        if (requestParameters['triggeredAfter'] != null) {
            queryParameters['triggered_after'] = (requestParameters['triggeredAfter'] as any).toISOString();
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["X-API-Key"] = await this.configuration.apiKey("X-API-Key"); // APIKeyHeader authentication
        }

        const response = await this.request({
            path: `/api/v1/events/`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AlertEventListResponseFromJSON(jsonValue));
    }

    /**
     * List all events for the authenticated user with filtering and pagination
     * List Events
     */
    async listEventsApiV1EventsGet(requestParameters: ListEventsApiV1EventsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AlertEventListResponse> {
        const response = await this.listEventsApiV1EventsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
