/* tslint:disable */
/* eslint-disable */
/**
 * News Hook API
 * API for monitoring and alerting on news and content updates
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { HttpMethod } from './HttpMethod';
import {
    HttpMethodFromJSON,
    HttpMethodFromJSONTyped,
    HttpMethodToJSON,
    HttpMethodToJSONTyped,
} from './HttpMethod';

/**
 * 
 * @export
 * @interface AlertEventItem
 */
export interface AlertEventItem {
    /**
     * The ID of the alert event
     * @type {string}
     * @memberof AlertEventItem
     */
    id: string;
    /**
     * The ID of the alert prompt
     * @type {string}
     * @memberof AlertEventItem
     */
    alertPromptId: string;
    /**
     * The datetime the alert event was sent
     * @type {Date}
     * @memberof AlertEventItem
     */
    triggeredAt: Date;
    /**
     * The json schema requested for the alert
     * @type {{ [key: string]: any; }}
     * @memberof AlertEventItem
     */
    structuredData: { [key: string]: any; };
    /**
     * The alert prompt that this event answered to
     * @type {string}
     * @memberof AlertEventItem
     */
    prompt: string;
    /**
     * The HTTP method used at the URL
     * @type {HttpMethod}
     * @memberof AlertEventItem
     */
    httpMethod: HttpMethod;
    /**
     * The HTTP URL that the alert event was sent to
     * @type {string}
     * @memberof AlertEventItem
     */
    httpUrl: string;
    /**
     * Whether the alert is recurring or not
     * @type {boolean}
     * @memberof AlertEventItem
     */
    isRecurring: boolean;
}



/**
 * Check if a given object implements the AlertEventItem interface.
 */
export function instanceOfAlertEventItem(value: object): value is AlertEventItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('alertPromptId' in value) || value['alertPromptId'] === undefined) return false;
    if (!('triggeredAt' in value) || value['triggeredAt'] === undefined) return false;
    if (!('structuredData' in value) || value['structuredData'] === undefined) return false;
    if (!('prompt' in value) || value['prompt'] === undefined) return false;
    if (!('httpMethod' in value) || value['httpMethod'] === undefined) return false;
    if (!('httpUrl' in value) || value['httpUrl'] === undefined) return false;
    if (!('isRecurring' in value) || value['isRecurring'] === undefined) return false;
    return true;
}

export function AlertEventItemFromJSON(json: any): AlertEventItem {
    return AlertEventItemFromJSONTyped(json, false);
}

export function AlertEventItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertEventItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'alertPromptId': json['alert_prompt_id'],
        'triggeredAt': (new Date(json['triggered_at'])),
        'structuredData': json['structured_data'],
        'prompt': json['prompt'],
        'httpMethod': HttpMethodFromJSON(json['http_method']),
        'httpUrl': json['http_url'],
        'isRecurring': json['is_recurring'],
    };
}

export function AlertEventItemToJSON(json: any): AlertEventItem {
    return AlertEventItemToJSONTyped(json, false);
}

export function AlertEventItemToJSONTyped(value?: AlertEventItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'alert_prompt_id': value['alertPromptId'],
        'triggered_at': ((value['triggeredAt']).toISOString()),
        'structured_data': value['structuredData'],
        'prompt': value['prompt'],
        'http_method': HttpMethodToJSON(value['httpMethod']),
        'http_url': value['httpUrl'],
        'is_recurring': value['isRecurring'],
    };
}

