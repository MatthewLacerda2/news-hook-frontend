/* tslint:disable */
/* eslint-disable */
/**
 * News Hook API
 * API for monitoring and alerting on news and content updates
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AlertStatus } from './AlertStatus';
import {
    AlertStatusFromJSON,
    AlertStatusFromJSONTyped,
    AlertStatusToJSON,
    AlertStatusToJSONTyped,
} from './AlertStatus';
import type { HttpMethod } from './HttpMethod';
import {
    HttpMethodFromJSON,
    HttpMethodFromJSONTyped,
    HttpMethodToJSON,
    HttpMethodToJSONTyped,
} from './HttpMethod';

/**
 * 
 * @export
 * @interface AlertPromptItem
 */
export interface AlertPromptItem {
    /**
     * The ID of the alert
     * @type {string}
     * @memberof AlertPromptItem
     */
    id: string;
    /**
     * The natural language prompt describing what to monitor
     * @type {string}
     * @memberof AlertPromptItem
     */
    prompt: string;
    /**
     * 
     * @type {HttpMethod}
     * @memberof AlertPromptItem
     */
    httpMethod: HttpMethod;
    /**
     * 
     * @type {string}
     * @memberof AlertPromptItem
     */
    httpUrl: string;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AlertPromptItem
     */
    httpHeaders?: { [key: string]: any; } | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AlertPromptItem
     */
    payloadFormat?: { [key: string]: any; } | null;
    /**
     * Whether the alert is recurring
     * @type {boolean}
     * @memberof AlertPromptItem
     */
    isRecurring: boolean;
    /**
     * Tags for hinting
     * @type {Array<string>}
     * @memberof AlertPromptItem
     */
    tags?: Array<string>;
    /**
     * 
     * @type {AlertStatus}
     * @memberof AlertPromptItem
     */
    status: AlertStatus;
    /**
     * The date and time the alert was created
     * @type {Date}
     * @memberof AlertPromptItem
     */
    createdAt: Date;
    /**
     * The date and time the alert will expire
     * @type {Date}
     * @memberof AlertPromptItem
     */
    expiresAt: Date;
    /**
     * The LLM model used to create the alert
     * @type {string}
     * @memberof AlertPromptItem
     */
    llmModel: string;
}



/**
 * Check if a given object implements the AlertPromptItem interface.
 */
export function instanceOfAlertPromptItem(value: object): value is AlertPromptItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('prompt' in value) || value['prompt'] === undefined) return false;
    if (!('httpMethod' in value) || value['httpMethod'] === undefined) return false;
    if (!('httpUrl' in value) || value['httpUrl'] === undefined) return false;
    if (!('isRecurring' in value) || value['isRecurring'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined) return false;
    if (!('llmModel' in value) || value['llmModel'] === undefined) return false;
    return true;
}

export function AlertPromptItemFromJSON(json: any): AlertPromptItem {
    return AlertPromptItemFromJSONTyped(json, false);
}

export function AlertPromptItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): AlertPromptItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'prompt': json['prompt'],
        'httpMethod': HttpMethodFromJSON(json['http_method']),
        'httpUrl': json['http_url'],
        'httpHeaders': json['http_headers'] == null ? undefined : json['http_headers'],
        'payloadFormat': json['payload_format'] == null ? undefined : json['payload_format'],
        'isRecurring': json['is_recurring'],
        'tags': json['tags'] == null ? undefined : json['tags'],
        'status': AlertStatusFromJSON(json['status']),
        'createdAt': (new Date(json['created_at'])),
        'expiresAt': (new Date(json['expires_at'])),
        'llmModel': json['llm_model'],
    };
}

export function AlertPromptItemToJSON(json: any): AlertPromptItem {
    return AlertPromptItemToJSONTyped(json, false);
}

export function AlertPromptItemToJSONTyped(value?: AlertPromptItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'prompt': value['prompt'],
        'http_method': HttpMethodToJSON(value['httpMethod']),
        'http_url': value['httpUrl'],
        'http_headers': value['httpHeaders'],
        'payload_format': value['payloadFormat'],
        'is_recurring': value['isRecurring'],
        'tags': value['tags'],
        'status': AlertStatusToJSON(value['status']),
        'created_at': ((value['createdAt']).toISOString()),
        'expires_at': ((value['expiresAt']).toISOString()),
        'llm_model': value['llmModel'],
    };
}

