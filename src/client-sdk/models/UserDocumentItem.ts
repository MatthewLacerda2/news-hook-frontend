/* tslint:disable */
/* eslint-disable */
/**
 * News Hook API
 * API for monitoring and alerting on news and content updates
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDocumentItem
 */
export interface UserDocumentItem {
    /**
     * The id of the document
     * @type {string}
     * @memberof UserDocumentItem
     */
    id: string;
    /**
     * The name of the document
     * @type {string}
     * @memberof UserDocumentItem
     */
    name: string;
    /**
     * The content of the document itself. Limit of 2048 tokens.
     * @type {string}
     * @memberof UserDocumentItem
     */
    content: string;
    /**
     * The date and time the document was uploaded by the user
     * @type {Date}
     * @memberof UserDocumentItem
     */
    uploadedAt: Date;
}

/**
 * Check if a given object implements the UserDocumentItem interface.
 */
export function instanceOfUserDocumentItem(value: object): value is UserDocumentItem {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('uploadedAt' in value) || value['uploadedAt'] === undefined) return false;
    return true;
}

export function UserDocumentItemFromJSON(json: any): UserDocumentItem {
    return UserDocumentItemFromJSONTyped(json, false);
}

export function UserDocumentItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDocumentItem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'content': json['content'],
        'uploadedAt': (new Date(json['uploaded_at'])),
    };
}

export function UserDocumentItemToJSON(json: any): UserDocumentItem {
    return UserDocumentItemToJSONTyped(json, false);
}

export function UserDocumentItemToJSONTyped(value?: UserDocumentItem | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'content': value['content'],
        'uploaded_at': ((value['uploadedAt']).toISOString()),
    };
}

