/* tslint:disable */
/* eslint-disable */
/**
 * News Hook API
 * API for monitoring and alerting on news and content updates
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AgentControllerResponse } from './AgentControllerResponse';
import {
    AgentControllerResponseFromJSON,
    AgentControllerResponseFromJSONTyped,
    AgentControllerResponseToJSON,
    AgentControllerResponseToJSONTyped,
} from './AgentControllerResponse';

/**
 * 
 * @export
 * @interface TokenResponse
 */
export interface TokenResponse {
    /**
     * JWT access token
     * @type {string}
     * @memberof TokenResponse
     */
    accessToken: string;
    /**
     * Type of token
     * @type {string}
     * @memberof TokenResponse
     */
    tokenType?: string;
    /**
     * Token expiration time
     * @type {Date}
     * @memberof TokenResponse
     */
    expiresIn: Date;
    /**
     * 
     * @type {AgentControllerResponse}
     * @memberof TokenResponse
     */
    agentController: AgentControllerResponse;
}

/**
 * Check if a given object implements the TokenResponse interface.
 */
export function instanceOfTokenResponse(value: object): value is TokenResponse {
    if (!('accessToken' in value) || value['accessToken'] === undefined) return false;
    if (!('expiresIn' in value) || value['expiresIn'] === undefined) return false;
    if (!('agentController' in value) || value['agentController'] === undefined) return false;
    return true;
}

export function TokenResponseFromJSON(json: any): TokenResponse {
    return TokenResponseFromJSONTyped(json, false);
}

export function TokenResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): TokenResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'],
        'tokenType': json['token_type'] == null ? undefined : json['token_type'],
        'expiresIn': (new Date(json['expires_in'])),
        'agentController': AgentControllerResponseFromJSON(json['agent_controller']),
    };
}

export function TokenResponseToJSON(json: any): TokenResponse {
    return TokenResponseToJSONTyped(json, false);
}

export function TokenResponseToJSONTyped(value?: TokenResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_token': value['accessToken'],
        'token_type': value['tokenType'],
        'expires_in': ((value['expiresIn']).toISOString()),
        'agent_controller': AgentControllerResponseToJSON(value['agentController']),
    };
}

